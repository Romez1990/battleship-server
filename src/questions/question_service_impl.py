from random import choice

from src.ioc_container import service
from .question import Question
from .question_service import QuestionService


@service
class QuestionServiceImpl(QuestionService):
    def __init__(self) -> None:
        self.__questions = [
            Question('Какого цвета трава?', [
                'Зелёная',
                'Синяя',
                'Красная',
                'Чёрная',
            ]),
            Question('Сколько планет в Солнейчной система?', [
                '8',
                '9',
                '10',
                '7',
            ]),
            Question('Сколько будет 0,2 км в дециметрах?', [
                '2 000 дм',
                '20 000 дм',
                '200 дм',
                '20 дм',
            ]),
            Question('Зелёный пигмент, окрашивающий листья растений, называется', [
                'Хлорофилл',
                'Хлорофиллипт',
                'Хлоропласт',
                'Хлороформ',
            ]),
            Question('Почему времена года сменяют друг друга?', [
                'Из-за наклона земной оси',
                'Из-за удаления и приближения Земли к Солнцу',
                'Из-за вращения Земли вокруг своей оси',
                'Из-за влияния гравитации Юпитера',
            ]),
            Question('Сколько хромосом в геноме человека?', [
                '46',
                '44',
                '42',
                '48',
            ]),
            Question('Кто спит с открытыми глазами?', [
                'Рыбы',
                'Лошади',
                'Зайцы',
                'Воробьи',
            ]),
            Question('Какие часы показывают правильное время только два раза в сутки?', [
                'Сломанные',
                'Песочные',
                'Биг Бен',
                'Солнечные',
            ]),
            Question('Что теряют космонавты во время полёта?', [
                'Вес',
                'Сознание',
                'Сон',
                'Память',
            ]),
            Question('Что из этого изобрели раньше?', [
                'Часы',
                'Противогаз',
                'Термометр',
                'Телефон',
            ]),
            Question('Что может одновременно идти и лежать, стоять и висеть?', [
                'Машина',
                'Корабль',
                'Поезд',
                'Часы',
            ]),
        ]

    def get_question(self) -> Question:
        return choice(self.__questions)
